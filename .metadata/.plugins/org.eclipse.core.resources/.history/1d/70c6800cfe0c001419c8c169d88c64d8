/*
 * io.c
 *
 *  Created on: Jul 16, 2014
 *      Author: zacaj
 */


#include <stddef.h>
#include "stm32f30x.h"
#include "stm32f30x_gpio.h"
#include "stm32f30x_conf.h"
#include "stm32f3_discovery.h"
#include <stdio.h>
#include "io.h"

uint8_t mInputState[2];

void initInput(IOPin pin, GPIOPuPd_TypeDef def)
{
	if((int)pin.bank<10)
		return;
	GPIO_InitTypeDef init;
	init.GPIO_Mode = GPIO_Mode_IN;
	init.GPIO_OType = GPIO_OType_PP;
	init.GPIO_Pin = pin.pin;
	init.GPIO_PuPd = def;

	GPIO_Init(pin.bank, &init);
}

void initOutput(IOPin pin)
{
	if((int)pin.bank<10)
		return;
	GPIO_InitTypeDef init;
	init.GPIO_Mode = GPIO_Mode_OUT;
	init.GPIO_OType = GPIO_OType_PP;
	init.GPIO_Pin = pin.pin;
	init.GPIO_PuPd = GPIO_PuPd_NOPULL;
	init.GPIO_Speed = GPIO_Speed_Level_3;
	GPIO_Init(pin.bank, &init);
}

void setOut(IOPin pin, uint32_t value)
{
	if((int)pin.bank<10)
		return;
	GPIO_WriteBit(pin.bank, pin.pin, value);
}

uint8_t getIn(IOPin pin)
{
	if((int)pin.bank<10)
	{
		if((int)pin.bank==1)
			return (mInputState[0]&(1<<pin.pin))?1:0;
		if((int)pin.bank==2)
			return (mInputState[1]&(1<<pin.pin))?1:0;
	}
	return GPIO_ReadInputDataBit(pin.bank, pin.pin);
}

void initIOs()
{
	for(int i=0;i<2;i++)
		//for(int j=0;j<16;j++)
			mInputState[i]=0;
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE);
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOD, ENABLE);
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOE, ENABLE);
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOF, ENABLE);
}

void updateIOs()
{
	for(int i=0;i<2;i++)
	{
		uint8_t in=0;
		setOut(MULTI_IN_LATCH[i],0);
		int i;
		for(i=0;i<8;i++)
		{
			GPIO_WriteBit(GPIOE,IN_CLOCK,0);
			in<<=1;
			in|=GPIO_ReadInputDataBit(GPIOB,IN_DATA);
			GPIO_WriteBit(GPIOE,IN_CLOCK,1);
		}
		setOut(MULTI_IN_LATCH[i],1);
	}
}
